Group                         gHome                                         "Home"                                                                                                       ["Building"]
Group                         gIndoor                                       "Building"                       <house>               (gHome)                                               ["Indoor"]
Group                         gOutdoor                                      "Outdoor"                        <garden>              (gHome)                                               ["Outdoor"]

Group                         gAttic                                        "Attic"                          <attic>               (gIndoor)                                             ["Attic"]                          {widgetOrder="11"}
Group                         gCorridorAttic                                "Corridor Attic"                 <corridor>            (gAttic)                                              ["Corridor"]                       {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Corridor", location="Attic"],widgetOrder="12"}
Group                         gOffice                                       "Office"                         <office>              (gAttic)                                              ["Room"]                           {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Office", location="Attic"],widgetOrder="13"}
Group                         gGuestroom                                    "Guestroom"                      <bedroom>             (gAttic)                                              ["Bedroom"]                        {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Guestroom", location="Attic"],widgetOrder="14"}

Group                         gFirstFloor                                   "First Floor"                    <firstfloor>          (gIndoor)                                             ["FirstFloor"]                     {widgetOrder="21"}
Group                         gCorridorFirstfloor                           "Corridor FF"                    <corridor>            (gFirstFloor)                                         ["Corridor"]                       {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Corridor", location="First Floor"],widgetOrder="22"}
Group                         gChildroom                                    "Childroom"                      <boy_1>               (gFirstFloor)                                         ["Bedroom"]                        {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Childroom", location="First Floor"],widgetOrder="23"}
Group                         gBathroom                                     "Bathroom"                       <bath>                (gFirstFloor)                                         ["Bathroom"]                       {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Bathroom", location="First Floor"],widgetOrder="24"}
Group                         gBedroom                                      "Bedroom"                        <bedroom>             (gFirstFloor)                                         ["Bedroom"]                        {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Bedroom", location="First Floor"],widgetOrder="25"}

Group                         gGroundFloor                                  "Ground Floor"                   <groundfloor>         (gIndoor)                                             ["GroundFloor"]                    {widgetOrder="31"}
Group                         gEntrance                                     "Corridor GF"                    <corridor>            (gGroundFloor)                                        ["Corridor"]                       {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Corridor", location="Ground Floor"],widgetOrder="32"}
Group                         gToilet                                       "Toilet"                         <toilet>              (gGroundFloor)                                        ["Bathroom"]                       {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Toilet", location="Ground Floor"],widgetOrder="33"}
Group                         gKitchen                                      "Kitchen"                        <kitchen>             (gGroundFloor)                                        ["Kitchen"]                        {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Kitchen", location="Ground Floor"],widgetOrder="34"}
Group                         gDiningroom                                   "Diningroom"                                           (gGroundFloor)                                        ["DiningRoom"]                     {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Dininroom", location="Ground Floor"],widgetOrder="35"}
Group                         gLivingroom                                   "Livingroom"                     <sofa>                (gGroundFloor)                                        ["LivingRoom"]                     {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Livingroom", location="Ground Floor"],widgetOrder="36"}

Group                         gBasement                                     "Basement"                       <cellar>              (gIndoor)                                             ["Basement"]                       {widgetOrder="41"}
Group                         gCorridorCellar                               "Corridor Basement"              <corridor>            (gBasement)                                           ["Corridor"]                       {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Corridor", location="Basement"],widgetOrder="42"}
Group                         gLaundry                                      "Laundryroom"                    <washingmachine>      (gBasement)                                           ["LaundryRoom"]                    {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Laundryroom", location="Basement"],widgetOrder="43"}
Group                         gBoilerRoom                                   "Boilerroom"                     <heating>             (gBasement)                                           ["BoilerRoom"]                     {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Boilerroom", location="Basement"],widgetOrder="44"}
Group                         gHobbyroom                                    "Hobbyroom"                                            (gBasement)                                           ["Room"]                           {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Hobbyroom", location="Basement"],widgetOrder="45"}

Group                         gGarden                                       "Garden"                         <garden>              (gOutdoor)                                            ["Garden"]                         {widgetOrder="51"}
Group                         gShed                                         "Shed"                           <garden>              (gOutdoor)                                            ["Location"]                       {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Shed", location="Garden"],widgetOrder="52"}
Group                         gTerrace                                      "Terrace"                        <terrace>             (gOutdoor)                                            ["Room"]                           {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Terrace", location="Garden"],widgetOrder="53"}

Group:Number:COUNT(ON)        gSmokeAlarm                                   "Smokealarm"                     <smoke>
Group:Number:COUNT(ON)        gBatteryLow                                   "Empty Batteries"                <lowbattery>
Group:Number:COUNT(OPEN)      gWindowsOpen                                  "Windows Open"                                         (gWindows)
Group:Number:COUNT(OPEN)      gDoorsOpen                                    "Doors Open"                                           (gDoors)
Group:Number:COUNT(ON)        gMotionDetected                               "Motion Detected"                                      (gIndoor)

Group                         RollershutterOffice                           "Rollershutter"                  <rollershutter>       (gOffice)                                             ["Blinds"]                         {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Rollershutter", location="Office"]}
Rollershutter                 RollershutterOffice_control                   "Steuerung"                      <rollershutter>       (RollershutterOffice)                                 ["Control" ,"Opening"]             {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Rollershutter", location="Office"]}
Switch                        RollershutterOffice_scheduleControl           "Zeitsteuerung"                  <time>                (RollershutterOffice)                                 ["Control", "Timestamp"]
DateTime                      RollershutterOffice_openWeek                  "Open Weekdays"                  <time>                (RollershutterOffice)                                 ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RollershutterOffice_closeWeek                 "Close Weekdays"                 <time>                (RollershutterOffice)                                 ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RollershutterOffice_openWeekend               "Open Weekend"                   <time>                (RollershutterOffice)                                 ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RollershutterOffice_closeWeekend              "Close Weekend"                  <time>                (RollershutterOffice)                                 ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}

Group                         RollershutterGuestroom                        "Rollershutter"                  <rollershutter>       (gGuestroom)                                          ["Blinds"]                         {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Rollershutter", location="Guestroom"]}
Rollershutter                 RollershutterGuestroom_control                "Steuerung"                      <rollershutter>       (RollershutterGuestroom)                              ["Control" ,"Opening"]             {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Rollershutter", location="Guestroom"]}
Switch                        RollershutterGuestroom_scheduleControl        "Zeitsteuerung"                  <time>                (RollershutterGuestroom)                              ["Control", "Timestamp"]
DateTime                      RollershutterGuestroom_openWeek               "Open Weekdays"                  <time>                (RollershutterGuestroom)                              ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RollershutterGuestroom_closeWeek              "Close Weekdays"                 <time>                (RollershutterGuestroom)                              ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RollershutterGuestroom_openWeekend            "Open Weekend"                   <time>                (RollershutterGuestroom)                              ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RollershutterGuestroom_closeWeekend           "Close Weekend"                  <time>                (RollershutterGuestroom)                              ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}

Group                         RollershutterChildroom                        "Rollershutter"                  <rollershutter>       (gChildroom)                                          ["Blinds"]                         {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Rollershutter", location="Childroom"]}
Rollershutter                 RollershutterChildroom_control                "Steuerung"                      <rollershutter>       (RollershutterChildroom)                              ["Control" ,"Opening"]             {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Rollershutter", location="Childroom"]}
Switch                        RollershutterChildroom_scheduleControl        "Zeitsteuerung"                  <time>                (RollershutterChildroom)                              ["Control", "Timestamp"]
DateTime                      RollershutterChildroom_openWeek               "Open Weekdays"                  <time>                (RollershutterChildroom)                              ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RollershutterChildroom_closeWeek              "Close Weekdays"                 <time>                (RollershutterChildroom)                              ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RollershutterChildroom_openWeekend            "Open Weekend"                   <time>                (RollershutterChildroom)                              ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RollershutterChildroom_closeWeekend           "Close Weekend"                  <time>                (RollershutterChildroom)                              ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}

Group                         RollershutterBedroom                          "Rollershutter"                  <rollershutter>       (gBedroom)                                            ["Blinds"]                         {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Rollershutter", location="Bedroom"]}
Rollershutter                 RollershutterBedroom_control                  "Steuerung"                      <rollershutter>       (RollershutterBedroom)                                ["Control" ,"Opening"]             {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Rollershutter", location="Bedroom"]}
Switch                        RollershutterBedroom_scheduleControl          "Zeitsteuerung"                  <time>                (RollershutterBedroom)                                ["Control", "Timestamp"]
DateTime                      RollershutterBedroom_openWeek                 "Open Weekdays"                  <time>                (RollershutterBedroom)                                ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RollershutterBedroom_closeWeek                "Close Weekdays"                 <time>                (RollershutterBedroom)                                ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RollershutterBedroom_openWeekend              "Open Weekend"                   <time>                (RollershutterBedroom)                                ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RollershutterBedroom_closeWeekend             "Close Weekend"                  <time>                (RollershutterBedroom)                                ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}

Group                         RollershutterKitchen                          "Rollershutter"                  <rollershutter>       (gKitchen)                                            ["Blinds"]                         {uiSemantics="uiSemantics"[preposition=" in der", equipment="Rollershutter", location="Kitchen"]}
Rollershutter                 RollershutterKitchen_control                  "Steuerung"                      <rollershutter>       (RollershutterKitchen)                                ["Control" ,"Opening"]             {uiSemantics="uiSemantics"[preposition=" in der", equipment="Rollershutter", location="Kitchen"]}
Switch                        RollershutterKitchen_scheduleControl          "Zeitsteuerung"                  <time>                (RollershutterKitchen)                                ["Control", "Timestamp"]
DateTime                      RollershutterKitchen_openWeek                 "Open Weekdays"                  <time>                (RollershutterKitchen)                                ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RollershutterKitchen_closeWeek                "Close Weekdays"                 <time>                (RollershutterKitchen)                                ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RollershutterKitchen_openWeekend              "Open Weekend"                   <time>                (RollershutterKitchen)                                ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RollershutterKitchen_closeWeekend             "Close Weekend"                  <time>                (RollershutterKitchen)                                ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}

Group                         RollershutterLivingroom                       "Rollershutter"                  <rollershutter>       (gLivingroom)                                         ["Blinds"]                         {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Rollershutter", location="Livingroom"]}
Rollershutter                 RollershutterLivingroom_control               "Steuerung"                      <rollershutter>       (RollershutterLivingroom)                             ["Control" ,"Opening"]             {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Rollershutter", location="Livingroom"]}
Switch                        RollershutterLivingroom_scheduleControl       "Zeitsteuerung"                  <time>                (RollershutterLivingroom)                             ["Control", "Timestamp"]
DateTime                      RollershutterLivingroom_openWeek              "Open Weekdays"                  <time>                (RollershutterLivingroom)                             ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RollershutterLivingroom_closeWeek             "Close Weekdays"                 <time>                (RollershutterLivingroom)                             ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RollershutterLivingroom_openWeekend           "Open Weekend"                   <time>                (RollershutterLivingroom)                             ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RollershutterLivingroom_closeWeekend          "Close Weekend"                  <time>                (RollershutterLivingroom)                             ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}


Group                         RadiatorControlOffice                         "Radiator Control"               <heating>             (gOffice)                                             ["RadiatorControl"]                {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Radiator Control", location="Office"]}
Switch                        RadiatorControlOffice_timeControl             "Time Control"                   <time>                (RadiatorControlOffice)                               ["Control", "Timestamp"]
DateTime                      RadiatorControlOffice_comfortOnWeek           "Comfort on Weekday"             <time>                (RadiatorControlOffice)                               ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RadiatorControlOffice_comfortOnWeekend        "Comfort on Weekend"             <time>                (RadiatorControlOffice)                               ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RadiatorControlOffice_ecoOnWeek               "Eco on Weekday"                 <time>                (RadiatorControlOffice)                               ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RadiatorControlOffice_ecoOnWeekend            "Eco on Weekend"                 <time>                (RadiatorControlOffice)                               ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
Switch                        RadiatorControlOffice_lowBattery              "Low Battery"                    <lowBattery>          (RadiatorControlOffice, gBatteryLow)                  ["Energy", "LowBattery"]           {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Radiator Control", location="Office"]}
String                        RadiatorControlOffice_mode                    "Mode"                                                 (RadiatorControlOffice)                               ["Control"]
Number:Temperature            RadiatorControlOffice_targetTemp              "Target Temperature"             <heating>             (RadiatorControlOffice)                               ["Setpoint", "Temperature"]
Number:Temperature            RadiatorControlOffice_ambientTemp             "Ambient Temperature"            <temperature>         (RadiatorControlOffice)                               ["Measurement", "Temperature"]

Group                         RadiatorControlGuestroom                      "Radiator Control"               <heating>             (gGuestroom)                                          ["RadiatorControl"]                {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Radiator Control", location="Guestroom"]}
Switch                        RadiatorControlGuestroom_timeControl          "Time Control"                   <time>                (RadiatorControlGuestroom)                            ["Control", "Timestamp"]
DateTime                      RadiatorControlGuestroom_comfortOnWeek        "Comfort on Weekday"             <time>                (RadiatorControlGuestroom)                            ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RadiatorControlGuestroom_comfortOnWeekend     "Comfort on Weekend"             <time>                (RadiatorControlGuestroom)                            ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RadiatorControlGuestroom_ecoOnWeek            "Eco on Weekday"                 <time>                (RadiatorControlGuestroom)                            ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RadiatorControlGuestroom_ecoOnWeekend         "Eco on Weekend"                 <time>                (RadiatorControlGuestroom)                            ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
Switch                        RadiatorControlGuestroom_lowBattery           "Low Battery"                    <lowBattery>          (RadiatorControlGuestroom, gBatteryLow)               ["Energy", "LowBattery"]           {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Radiator Control", location="Guestroom"]}
String                        RadiatorControlGuestroom_mode                 "Mode"                                                 (RadiatorControlGuestroom)                            ["Control"]
Number:Temperature            RadiatorControlGuestroom_targetTemp           "Target Temperature"             <heating>             (RadiatorControlGuestroom)                            ["Setpoint", "Temperature"]
Number:Temperature            RadiatorControlGuestroom_ambientTemp          "Ambient Temperature"            <temperature>         (RadiatorControlGuestroom)                            ["Measurement", "Temperature"]

Group                         RadiatorControlChildroom                      "Radiator Control"               <heating>             (gChildroom)                                          ["RadiatorControl"]                {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Radiator Control", location="Childroom"]}
Switch                        RadiatorControlChildroom_timeControl          "Time Control"                   <time>                (RadiatorControlChildroom)                            ["Control", "Timestamp"]
DateTime                      RadiatorControlChildroom_comfortOnWeek        "Comfort on Weekday"             <time>                (RadiatorControlChildroom)                            ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RadiatorControlChildroom_comfortOnWeekend     "Comfort on Weekend"             <time>                (RadiatorControlChildroom)                            ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RadiatorControlChildroom_ecoOnWeek            "Eco on Weekday"                 <time>                (RadiatorControlChildroom)                            ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RadiatorControlChildroom_ecoOnWeekend         "Eco on Weekend"                 <time>                (RadiatorControlChildroom)                            ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
Switch                        RadiatorControlChildroom_lowBattery           "Low Battery"                    <lowBattery>          (RadiatorControlChildroom, gBatteryLow)               ["Energy", "LowBattery"]           {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Radiator Control", location="Childroom"]}
String                        RadiatorControlChildroom_mode                 "Mode"                                                 (RadiatorControlChildroom)                            ["Control"]
Number:Temperature            RadiatorControlChildroom_targetTemp           "Target Temperature"             <heating>             (RadiatorControlChildroom)                            ["Setpoint", "Temperature"]
Number:Temperature            RadiatorControlChildroom_ambientTemp          "Ambient Temperature"            <temperature>         (RadiatorControlChildroom)                            ["Measurement", "Temperature"]

Group                         RadiatorControlBathroom                       "Radiator Control"               <heating>             (gBathroom)                                           ["RadiatorControl"]                {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Radiator Control", location="Bathroom"]}
Switch                        RadiatorControlBathroom_timeControl           "Time Control"                   <time>                (RadiatorControlBathroom)                             ["Control", "Timestamp"]
DateTime                      RadiatorControlBathroom_comfortOnWeek         "Comfort on Weekday"             <time>                (RadiatorControlBathroom)                             ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RadiatorControlBathroom_comfortOnWeekend      "Comfort on Weekend"             <time>                (RadiatorControlBathroom)                             ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RadiatorControlBathroom_ecoOnWeek             "Eco on Weekday"                 <time>                (RadiatorControlBathroom)                             ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RadiatorControlBathroom_ecoOnWeekend          "Eco on Weekend"                 <time>                (RadiatorControlBathroom)                             ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
Switch                        RadiatorControlBathroom_lowBattery            "Low Battery"                    <lowBattery>          (RadiatorControlBathroom, gBatteryLow)                ["Energy", "LowBattery"]           {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Radiator Control", location="Bathroom"]}
String                        RadiatorControlBathroom_mode                  "Mode"                                                 (RadiatorControlBathroom)                             ["Control"]
Number:Temperature            RadiatorControlBathroom_targetTemp            "Target Temperature"             <heating>             (RadiatorControlBathroom)                             ["Setpoint", "Temperature"]
Number:Temperature            RadiatorControlBathroom_ambientTemp           "Ambient Temperature"            <temperature>         (RadiatorControlBathroom)                             ["Measurement", "Temperature"]

Group                         RadiatorControlBedroom                        "Radiator Control"               <heating>             (gBedroom)                                            ["RadiatorControl"]                {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Radiator Control", location="Bedroom"]}
Switch                        RadiatorControlBedroom_timeControl            "Time Control"                   <time>                (RadiatorControlBedroom)                              ["Control", "Timestamp"]
DateTime                      RadiatorControlBedroom_comfortOnWeek          "Comfort on Weekday"             <time>                (RadiatorControlBedroom)                              ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RadiatorControlBedroom_comfortOnWeekend       "Comfort on Weekend"             <time>                (RadiatorControlBedroom)                              ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RadiatorControlBedroom_ecoOnWeek              "Eco on Weekday"                 <time>                (RadiatorControlBedroom)                              ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RadiatorControlBedroom_ecoOnWeekend           "Eco on Weekend"                 <time>                (RadiatorControlBedroom)                              ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
Switch                        RadiatorControlBedroom_lowBattery             "Low Battery"                    <lowBattery>          (RadiatorControlBedroom, gBatteryLow)                 ["Energy", "LowBattery"]           {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Radiator Control", location="Bedroom"]}
String                        RadiatorControlBedroom_mode                   "Mode"                                                 (RadiatorControlBedroom)                              ["Control"]
Number:Temperature            RadiatorControlBedroom_targetTemp             "Target Temperature"             <heating>             (RadiatorControlBedroom)                              ["Setpoint", "Temperature"]
Number:Temperature            RadiatorControlBedroom_ambientTemp            "Ambient Temperature"            <temperature>         (RadiatorControlBedroom)                              ["Measurement", "Temperature"]

Group                         RadiatorControlEntrance                       "Radiator Control"               <heating>             (gEntrance)                                           ["RadiatorControl"]                {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Radiator Control", location="Entrance"]}
Switch                        RadiatorControlEntrance_timeControl           "Time Control"                   <time>                (RadiatorControlEntrance)                             ["Control", "Timestamp"]
DateTime                      RadiatorControlEntrance_comfortOnWeek         "Comfort on Weekday"             <time>                (RadiatorControlEntrance)                             ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RadiatorControlEntrance_comfortOnWeekend      "Comfort on Weekend"             <time>                (RadiatorControlEntrance)                             ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RadiatorControlEntrance_ecoOnWeek             "Eco on Weekday"                 <time>                (RadiatorControlEntrance)                             ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RadiatorControlEntrance_ecoOnWeekend          "Eco on Weekend"                 <time>                (RadiatorControlEntrance)                             ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
Switch                        RadiatorControlEntrance_lowBattery            "Low Battery"                    <lowBattery>          (RadiatorControlEntrance, gBatteryLow)                ["Energy", "LowBattery"]           {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Radiator Control", location="Entrance"]}
String                        RadiatorControlEntrance_mode                  "Mode"                                                 (RadiatorControlEntrance)                             ["Control"]
Number:Temperature            RadiatorControlEntrance_targetTemp            "Target Temperature"             <heating>             (RadiatorControlEntrance)                             ["Setpoint", "Temperature"]
Number:Temperature            RadiatorControlEntrance_ambientTemp           "Ambient Temperature"            <temperature>         (RadiatorControlEntrance)                             ["Measurement", "Temperature"]

Group                         RadiatorControlToilet                         "Radiator Control"               <heating>             (gToilet)                                             ["RadiatorControl"]                {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Radiator Control", location="Toilet"]}
Switch                        RadiatorControlToilet_timeControl             "Time Control"                   <time>                (RadiatorControlToilet)                               ["Control", "Timestamp"]
DateTime                      RadiatorControlToilet_comfortOnWeek           "Comfort on Weekday"             <time>                (RadiatorControlToilet)                               ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RadiatorControlToilet_comfortOnWeekend        "Comfort on Weekend"             <time>                (RadiatorControlToilet)                               ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RadiatorControlToilet_ecoOnWeek               "Eco on Weekday"                 <time>                (RadiatorControlToilet)                               ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RadiatorControlToilet_ecoOnWeekend            "Eco on Weekend"                 <time>                (RadiatorControlToilet)                               ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
Switch                        RadiatorControlToilet_lowBattery              "Low Battery"                    <lowBattery>          (RadiatorControlToilet, gBatteryLow)                  ["Energy", "LowBattery"]           {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Radiator Control", location="Toilet"]}
String                        RadiatorControlToilet_mode                    "Mode"                                                 (RadiatorControlToilet)                               ["Control"]
Number:Temperature            RadiatorControlToilet_targetTemp              "Target Temperature"             <heating>             (RadiatorControlToilet)                               ["Setpoint", "Temperature"]
Number:Temperature            RadiatorControlToilet_ambientTemp             "Ambient Temperature"            <temperature>         (RadiatorControlToilet)                               ["Measurement", "Temperature"]

Group                         RadiatorControlKitchen                        "Radiator Control"               <heating>             (gKitchen)                                            ["RadiatorControl"]                {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Radiator Control", location="Kitchen"]}
Switch                        RadiatorControlKitchen_timeControl            "Time Control"                   <time>                (RadiatorControlKitchen)                              ["Control", "Timestamp"]
DateTime                      RadiatorControlKitchen_comfortOnWeek          "Comfort on Weekday"             <time>                (RadiatorControlKitchen)                              ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RadiatorControlKitchen_comfortOnWeekend       "Comfort on Weekend"             <time>                (RadiatorControlKitchen)                              ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RadiatorControlKitchen_ecoOnWeek              "Eco on Weekday"                 <time>                (RadiatorControlKitchen)                              ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RadiatorControlKitchen_ecoOnWeekend           "Eco on Weekend"                 <time>                (RadiatorControlKitchen)                              ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
Switch                        RadiatorControlKitchen_lowBattery             "Low Battery"                    <lowBattery>          (RadiatorControlKitchen, gBatteryLow)                 ["Energy", "LowBattery"]           {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Radiator Control", location="Kitchen"]}
String                        RadiatorControlKitchen_mode                   "Mode"                                                 (RadiatorControlKitchen)                              ["Control"]
Number:Temperature            RadiatorControlKitchen_targetTemp             "Target Temperature"             <heating>             (RadiatorControlKitchen)                              ["Setpoint", "Temperature"]
Number:Temperature            RadiatorControlKitchen_ambientTemp            "Ambient Temperature"            <temperature>         (RadiatorControlKitchen)                              ["Measurement", "Temperature"]

Group                         RadiatorControlDiningroom                     "Radiator Control"               <heating>             (gDiningroom)                                         ["RadiatorControl"]                {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Radiator Control", location="Diningroom"]}
Switch                        RadiatorControlDiningroom_timeControl         "Time Control"                   <time>                (RadiatorControlDiningroom)                           ["Control", "Timestamp"]
DateTime                      RadiatorControlDiningroom_comfortOnWeek       "Comfort on Weekday"             <time>                (RadiatorControlDiningroom)                           ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RadiatorControlDiningroom_comfortOnWeekend    "Comfort on Weekend"             <time>                (RadiatorControlDiningroom)                           ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RadiatorControlDiningroom_ecoOnWeek           "Eco on Weekday"                 <time>                (RadiatorControlDiningroom)                           ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RadiatorControlDiningroom_ecoOnWeekend        "Eco on Weekend"                 <time>                (RadiatorControlDiningroom)                           ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
Switch                        RadiatorControlDiningroom_lowBattery          "Low Battery"                    <lowBattery>          (RadiatorControlDiningroom, gBatteryLow)              ["Energy", "LowBattery"]           {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Radiator Control", location="Diningroom"]}
String                        RadiatorControlDiningroom_mode                "Mode"                                                 (RadiatorControlDiningroom)                           ["Control"]
Number:Temperature            RadiatorControlDiningroom_targetTemp          "Target Temperature"             <heating>             (RadiatorControlDiningroom)                           ["Setpoint", "Temperature"]
Number:Temperature            RadiatorControlDiningroom_ambientTemp         "Ambient Temperature"            <temperature>         (RadiatorControlDiningroom)                           ["Measurement", "Temperature"]

Group                         RadiatorControlLivingroom                     "Radiator Control"               <heating>             (gLivingroom)                                         ["RadiatorControl"]                {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Radiator Control", location="Livingroom"]}
Switch                        RadiatorControlLivingroom_timeControl         "Time Control"                   <time>                (RadiatorControlLivingroom)                           ["Control", "Timestamp"]
DateTime                      RadiatorControlLivingroom_comfortOnWeek       "Comfort on Weekday"             <time>                (RadiatorControlLivingroom)                           ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RadiatorControlLivingroom_comfortOnWeekend    "Comfort on Weekend"             <time>                (RadiatorControlLivingroom)                           ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RadiatorControlLivingroom_ecoOnWeek           "Eco on Weekday"                 <time>                (RadiatorControlLivingroom)                           ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
DateTime                      RadiatorControlLivingroom_ecoOnWeekend        "Eco on Weekend"                 <time>                (RadiatorControlLivingroom)                           ["Control", "Timestamp"]           {stateDescription=" "[pattern="%1$tH:%1$tM"], widget="widget:timepicker"[timeFormat="24h"], listWidget="widget:timepicker"[timeFormat="24h"]}
Switch                        RadiatorControlLivingroom_lowBattery          "Low Battery"                    <lowBattery>          (RadiatorControlLivingroom, gBatteryLow)              ["Energy", "LowBattery"]           {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Radiator Control", location="Livingroom"]}
String                        RadiatorControlLivingroom_mode                "Mode"                                                 (RadiatorControlLivingroom)                           ["Control"]
Number:Temperature            RadiatorControlLivingroom_targetTemp          "Target Temperature"             <heating>             (RadiatorControlLivingroom)                           ["Setpoint", "Temperature"]
Number:Temperature            RadiatorControlLivingroom_ambientTemp         "Ambient Temperature"            <temperature>         (RadiatorControlLivingroom)                           ["Measurement", "Temperature"]

Group                         hvacAttic                                     "HVAC"                           <climate>             (gOffice)                                             ["HVAC"]                           {uiSemantics="uiSemantics"[preposition=" in the ", equipment="HVAC", location="Attic"]}
Switch                        hvacAttic_power                               "Power"                          <switch>              (hvacAttic)                                           ["Control", "Power"]
String                        hvacAttic_mode                                "Mode"                           <temperature_cold>    (hvacAttic)                                           ["Control", "Temperature"]
Number:Temperature            hvacAttic_ambientTemp                         "Ambient Temperature"            <temperature>         (hvacAttic)                                           ["Measurement", "Temperature"]
Number:Temperature            hvacAttic_targetTemp                          "Target Temperature"             <temperature>         (hvacAttic)                                           ["Temperature", "Setpoint"]
String                        hvacAttic_fanSpeed                            "Fan Speed"                      <qualityofservice>    (hvacAttic)                                           ["Wind", "Control"]
String                        hvacAttic_vanesUpDown                         "Vane Position Up/Down"          <movecontrol>         (hvacAttic)                                           ["Control", "Opening"]

Group                         hvacBedroom                                   "HVAC"                           <climate>             (gBedroom)                                            ["HVAC"]                           {uiSemantics="uiSemantics"[preposition=" in the ", equipment="HVAC", location="Bedroom"]}
Switch                        hvacBedroom_power                             "Power"                          <switch>              (hvacBedroom)                                         ["Control", "Power"]
String                        hvacBedroom_mode                              "Mode"                           <temperature_cold>    (hvacBedroom)                                         ["Control", "Temperature"]
Number:Temperature            hvacBedroom_ambientTemp                       "Ambient Temperature"            <temperature>         (hvacBedroom)                                         ["Measurement", "Temperature"]
Number:Temperature            hvacBedroom_targetTemp                        "Target Temperature"             <temperature>         (hvacBedroom)                                         ["Temperature", "Setpoint"]
String                        hvacBedroom_fanSpeed                          "Fan Speed"                      <qualityofservice>    (hvacBedroom)                                         ["Wind", "Control"]
String                        hvacBedroom_vanesUpDown                       "Vane Position Up/Down"          <movecontrol>         (hvacBedroom)                                         ["Control", "Opening"]

Group                         hvacChildroom                                 "HVAC"                           <climate>             (gChildroom)                                          ["HVAC"]                           {uiSemantics="uiSemantics"[preposition=" in the ", equipment="HVAC", location="Childroom"]}
Switch                        hvacChildroom_power                           "Power"                          <switch>              (hvacChildroom)                                       ["Control", "Power"]
String                        hvacChildroom_mode                            "Mode"                           <temperature_cold>    (hvacChildroom)                                       ["Control", "Temperature"]
Number:Temperature            hvacChildroom_ambientTemp                     "Ambient Temperature"            <temperature>         (hvacChildroom)                                       ["Measurement", "Temperature"]
Number:Temperature            hvacChildroom_targetTemp                      "Target Temperature"             <temperature>         (hvacChildroom)                                       ["Temperature", "Setpoint"]
String                        hvacChildroom_fanSpeed                        "Fan Speed"                      <qualityofservice>    (hvacChildroom)                                       ["Wind", "Control"]
String                        hvacChildroom_vanesUpDown                     "Vane Position Up/Down"          <movecontrol>         (hvacChildroom)                                       ["Control", "Opening"]

Group                         CeilingLightCorridorAttic                     "Ceiling Light"                  <lightbulb>           (gCorridorAttic)                                      ["Lightbulb"]                      {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Ceiling Light", location="Corridor Attic"]}
Switch                        CeilingLightCorridorAttic_switch              "Ceiling Light"                  <lightbulb>           (CeilingLightCorridorAttic)                           ["Switch", "Light"]                {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Ceiling Light", location="Corridor Attic"]}

Group                         CeilingLightOffice                            "Ceiling Light"                  <lightbulb>           (gOffice)                                             ["Lightbulb"]                      {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Ceiling Light", location="Office"]}
Switch                        CeilingLightOffice_switch                     "Ceiling Light"                  <lightbulb>           (CeilingLightOffice)                                  ["Light", "Switch"]                {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Ceiling Light", location="Office"]}

Group                         ColorLightOffice                              "Color Light Office"             <colorlight>          (gOffice)                                             ["ColorLight"]                      {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Color Light", location="Office"]}
Dimmer                        ColorLightOffice_brightness                   "Brightness"                     <slider>              (ColorLightOffice)                                    ["Point", "Control"]
Dimmer                        ColorLightOffice_colorTemperature             "Color Temperature"              <slider>              (ColorLightOffice)                                    ["Control", "ColorTemperature"]
Color                         ColorLightOffice_color                        "Color"                          <colorpicker>         (ColorLightOffice)                                    ["Control", "Light"]

Group                         DimmableLightOffice                           "Color Light Office"             <colorlight>          (gOffice)                                             ["DimmableLight"]                      {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Dimmable Light", location="Office"]}
Dimmer                        DimmableLightOffice_brightness                "Brightness"                     <slider>              (DimmableLightOffice)                                 ["Point", "Control"]

Group                         CeilingLightGuestroom                         "Ceiling Light"                  <lightbulb>           (gGuestroom)                                          ["Lightbulb"]                      {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Ceiling Light", location="Guestroom"]}
Switch                        CeilingLightGuestroom_switch                  "Ceiling Light"                  <lightbulb>           (CeilingLightGuestroom)                               ["Light", "Switch"]                {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Ceiling Light", location="Guestroom"]}

Group                         CeilingLightCorridorFirstfloor                "Ceiling Light"                  <lightbulb>           (gCorridorFirstfloor)                                 ["Lightbulb"]                      {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Ceiling Light", location="Corridor First Floor"]}
Switch                        CeilingLightCorridorFirstfloor_switch         "Ceiling Light"                  <lightbulb>           (CeilingLightCorridorFirstfloor)                      ["Light", "Switch"]                {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Ceiling Light", location="Corridor First Floor"]}

Group                         CeilingLightChildroom                         "Ceiling Light"                  <lightbulb>           (gChildroom)                                          ["Lightbulb"]                      {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Ceiling Light", location="Childroom"]}
Switch                        CeilingLightChildroom_switch                  "Ceiling Light"                  <lightbulb>           (CeilingLightChildroom)                               ["Light", "Switch"]                {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Ceiling Light", location="Childroom"]}

Group                         CeilingLightBathroom                          "Ceiling Light"                  <lightbulb>           (gBathroom)                                           ["Lightbulb"]                      {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Ceiling Light", location="Bathroom"]}
Switch                        CeilingLightBathroom_switch                   "Ceiling Light"                  <lightbulb>           (CeilingLightBathroom)                                ["Light", "Switch"]                {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Ceiling Light", location="Bathroom"]}

Group                         CeilingLightBedroom                           "Ceiling Light"                  <lightbulb>           (gBedroom)                                            ["Lightbulb"]                      {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Ceiling Light", location="Bedroom"]}
Switch                        CeilingLightBedroom_switch                    "Ceiling Light"                  <lightbulb>           (CeilingLightBedroom)                                 ["Light", "Switch"]                {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Ceiling Light", location="Bedroom"]}

Group                         CeilingLightEntrance                          "Ceiling Light"                  <lightbulb>           (gEntrance)                                           ["Lightbulb"]                      {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Ceiling Light", location="Entrance"]}
Switch                        CeilingLightEntrance_switch                   "Ceiling Light"                  <lightbulb>           (CeilingLightEntrance)                                ["Switch", "Light"]                {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Ceiling Light", location="Entrance"]}

Group                         CeilingLightToilet                            "Ceiling Light"                  <lightbulb>           (gToilet)                                             ["Lightbulb"]                      {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Ceiling Light", location="Toilet"]}
Switch                        CeilingLightToilet_switch                     "Ceiling Light"                  <lightbulb>           (CeilingLightToilet)                                  ["Switch", "Light"]                {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Ceiling Light", location="Toilet"]}

Group                         CeilingLightKitchen                           "Ceiling Light"                  <lightbulb>           (gKitchen)                                            ["Lightbulb"]                      {uiSemantics="uiSemantics"[preposition=" in der", equipment="Ceiling Light", location="Kitchen"]}
Switch                        CeilingLightKitchen_switch                    "Ceiling Light"                  <lightbulb>           (CeilingLightKitchen)                                 ["Light", "Switch"]                {uiSemantics="uiSemantics"[preposition=" in der", equipment="Ceiling Light", location="Kitchen"]}

Group                         CeilingLightDiningroom                        "Ceiling Light"                  <lightbulb>           (gDiningroom)                                         ["Lightbulb"]                      {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Ceiling Light", location="Diningroom"]}
Switch                        CeilingLightDiningroom_switch                 "Ceiling Light"                  <lightbulb>           (CeilingLightDiningroom)                              ["Switch", "Light"]                {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Ceiling Light", location="Diningroom"]}

Group                         CeilingLightLivingroom                        "Ceiling Light"                  <lightbulb>           (gLivingroom)                                         ["Lightbulb"]                      {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Ceiling Light", location="Livingroom"]}
Switch                        CeilingLightLivingroom_switch                 "Ceiling Light"                  <lightbulb>           (CeilingLightLivingroom)                              ["Switch", "Light"]                {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Ceiling Light", location="Livingroom"]}

Group                         TerraceLight                                  "Terrace Light"                  <lightbulb>           (gTerrace)                                            ["Lightbulb"]                      {uiSemantics="uiSemantics"[preposition=" on the ", equipment="Light", location="Terrace"]}
Switch                        TerraceLight_switch                           "Terrace Light"                  <light>               (TerraceLight)                                        ["Switch", "Light"]                {uiSemantics="uiSemantics"[preposition=" on the ", equipment="Light", location="Terrace"]}

Group                         SmokeDetectorAttic                            "Smoke Detector"                 <smoke>               (gAttic)                                              ["SmokeDetector"]                  {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Smoke Detector", location="Attic"]}
Switch                        SmokeDetectorAttic_lowBattery                 "Low Battery"                    <lowbattery>          (SmokeDetectorAttic, gBatteryLow)                     ["Energy", "LowBattery"]           {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Smoke Detector", location="Attic"]}
Switch                        SmokeDetectorAttic_smoke                      "Smoke Alarm "                   <Smoke>               (SmokeDetectorAttic, gSmokeAlarm)                     ["Alarm ", "Smoke"]                {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Smoke Detector", location="Attic"]}

Group                         SmokeDetectorFirstFloor                       "Smoke Detector"                 <smoke>               (gCorridorFirstfloor)                                 ["SmokeDetector"]                  {uiSemantics="uiSemantics"[preposition=" at the ", equipment="Smoke Detector", location="First Floor"]}
Switch                        SmokeDetectorFirstFloor_lowBattery            "Low Battery"                    <LowBattery>          (SmokeDetectorFirstFloor, gBatteryLow)                ["Energy", "LowBattery"]           {uiSemantics="uiSemantics"[preposition=" at the ", equipment="Smoke Detector", location="First Floor"]}
Switch                        SmokeDetectorFirstFloor_smoke                 "Smoke Alarm "                   <Smoke>               (SmokeDetectorFirstFloor, gSmokeAlarm)                ["Alarm ", "Smoke"]                {uiSemantics="uiSemantics"[preposition=" at the ", equipment="Smoke Detector", location="First Floor"]}

Group                         SmokeDetectorBedroom                          "Smoke Detector"                 <smoke>               (gBedroom)                                            ["SmokeDetector"]                  {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Smoke Detector", location="Bedroom"]}
Switch                        SmokeDetectorBedroom_lowBattery               "Low Battery"                    <lowbattery>          (SmokeDetectorBedroom, gBatteryLow)                   ["Energy", "LowBattery"]           {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Smoke Detector", location="Bedroom"]}
Switch                        SmokeDetectorBedroom_smoke                    "Smoke Alarm "                   <Smoke>               (SmokeDetectorBedroom, gSmokeAlarm)                   ["Alarm ", "Smoke"]                {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Smoke Detector", location="Bedroom"]}

Group                         SmokeDetectorChildroom                        "Smoke Detector"                 <smoke>               (gChildroom)                                          ["SmokeDetector"]                  {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Smoke Detector", location="Childroom"]}
Switch                        SmokeDetectorChildroom_lowBattery             "Low Battery"                    <lowbattery>          (SmokeDetectorChildroom, gBatteryLow)                 ["Energy", "LowBattery"]           {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Smoke Detector", location="Childroom"]}
Switch                        SmokeDetectorChildroom_smoke                  "Smoke Alarm "                   <Smoke>               (SmokeDetectorChildroom, gSmokeAlarm)                 ["Alarm ", "Smoke"]                {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Smoke Detector", location="Childroom"]}

Group                         SmokeDetectorEntrance                         "Smoke Detector"                 <smoke>               (gEntrance)                                           ["SmokeDetector"]                  {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Smoke Detector", location="Entrance"]}
Switch                        SmokeDetectorEntrance_lowBattery              "Low Battery"                    <LowBattery>          (SmokeDetectorEntrance, gBatteryLow)                  ["Energy", "LowBattery"]           {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Smoke Detector", location="Entrance"]}
Switch                        SmokeDetectorEntrance_smoke                   "Smoke Alarm "                   <Smoke>               (SmokeDetectorEntrance, gSmokeAlarm)                  ["Alarm ", "Smoke"]                {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Smoke Detector", location="Entrance"]}

Group                         DoorContactEntrance                           "Door Entrance"                  <door>                (gEntrance)                                           ["BackDoor"]                       {uiSemantics="uiSemantics"[preposition=" at the ", equipment="Door Contact", location="Entrance"]}
Contact                       DoorContactEntrance_state                     "Door Contact"                   <door>                (DoorContactEntrance, gDoorsOpen)                     ["OpenState"]                      {uiSemantics="uiSemantics"[preposition=" at the ", equipment="Door Contact", location="Entrance"]}
Switch                        DoorContactEntrance_motion                    "Motion Detectet"                <motion>              (DoorContactEntrance, gMotionDetected)                ["Alarm ", "Presence"]             {uiSemantics="uiSemantics"[preposition=" at the ", equipment="Door Contact", location="Entrance"]}
Switch                        DoorContactEntrance_lowBattery                "Low Battery"                    <lowbattery>          (DoorContactEntrance, gBatteryLow)                    ["Energy", "LowBattery"]           {uiSemantics="uiSemantics"[preposition=" at the ", equipment="Door Contact", location="Entrance"]}

Group                         DoorContactTerracedoor                        "Türkontakt Terrasse"            <door>                (gLivingroom)                                         ["BackDoor"]                       {uiSemantics="uiSemantics"[preposition=" at the ", equipment="Door Contact", location="Terracedoor"]}
Contact                       DoorContactTerracedoor_state                  "Door Contact"                   <door>                (DoorContactTerracedoor, gDoorsOpen)                  ["OpenState"]                      {uiSemantics="uiSemantics"[preposition=" at the ", equipment="Door Contact", location="Terracedoor"]}
Switch                        DoorContactTerracedoor_motion                 "Motion Detectet"                <motion>              (DoorContactTerracedoor, gMotionDetected)             ["Alarm ", "Presence"]             {uiSemantics="uiSemantics"[preposition=" at the ", equipment="Door Contact", location="Terracedoor"]}
Switch                        DoorContactTerracedoor_lowBattery             "Low Battery"                    <lowbattery>          (DoorContactTerracedoor, gBatteryLow)                 ["Energy", "LowBattery"]           {uiSemantics="uiSemantics"[preposition=" at the ", equipment="Window Contact", location="Terracedoor"]}

Group                         WindowContactOffice                           "Window"                         <window>              (gOffice)                                             ["Window"]                         {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Window Contact", location="Office"]}
Switch                        WindowContactOffice_lowBattery                "Low Battery"                    <lowbattery>          (WindowContactOffice, gBatteryLow)                    ["Energy", "LowBattery"]           {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Window Contact", location="Office"]}
Contact                       WindowContactOffice_state                     "Window Contact"                 <window>              (WindowContactOffice, gWindowsOpen)                   ["OpenState"]                      {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Window Contact", location="Office"]}

Group                         WindowContactGuestroom                        "Window"                         <window>              (gGuestroom)                                          ["Window"]                         {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Window Contact", location="Guestroom"]}
Switch                        WindowContactGuestroom_lowBattery             "Low Battery"                    <lowbattery>          (WindowContactGuestroom, gBatteryLow)                 ["Energy", "LowBattery"]           {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Window Contact", location="Guestroom"]}
Contact                       WindowContactGuestroom_state                  "Window Contact"                 <window>              (WindowContactGuestroom, gWindowsOpen)                ["OpenState"]                      {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Window Contact", location="Guestroom"]}

Group                         WindowContactChildroom                        "Window"                         <window>              (gChildroom)                                          ["Window"]                         {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Window Contact", location="Childroom"]}
Switch                        WindowContactChildroom_lowBattery             "Low Battery"                    <lowbattery>          (WindowContactChildroom, gBatteryLow)                 ["Energy", "LowBattery"]           {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Window Contact", location="Childroom"]}
Contact                       WindowContactChildroom_state                  "Window Contact"                 <window>              (WindowContactChildroom, gWindowsOpen)                ["OpenState"]                      {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Window Contact", location="Childroom"]}

Group                         WindowContactBedroom                          "Window"                         <window>              (gBedroom)                                            ["Window"]                         {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Window Contact", location="Bedroom"]}
Switch                        WindowContactBedroom_lowBattery               "Low Battery"                    <lowbattery>          (WindowContactBedroom, gBatteryLow)                   ["Energy", "LowBattery"]           {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Window Contact", location="Bedroom"]}
Contact                       WindowContactBedroom_state                    "Window Contact"                 <window>              (WindowContactBedroom, gWindowsOpen)                  ["OpenState"]                      {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Window Contact", location="Bedroom"]}

Group                         WindowContactKitchen                          "Window"                         <window>              (gKitchen)                                            ["Window"]                         {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Window Contact", location="Kitchen"]}
Switch                        WindowContactKitchen_lowBattery               "Low Battery"                    <lowbattery>          (WindowContactKitchen, gBatteryLow)                   ["Energy", "LowBattery"]           {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Window Contact", location="Kitchen"]}
Contact                       WindowContactKitchen_state                    "Window Contact"                 <window>              (WindowContactKitchen, gWindowsOpen)                  ["OpenState"]                      {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Window Contact", location="Kitchen"]}

Group                         WindowContactToilet                           "Window"                         <window>              (gToilet)                                             ["Window"]                         {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Window Contact", location="Toilet"]}
Switch                        WindowContactToilet_lowBattery                "Low Battery"                    <lowbattery>          (WindowContactToilet, gBatteryLow)                    ["Energy", "LowBattery"]           {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Window Contact", location="Toilet"]}
Contact                       WindowContactToilet_state                     "Window Contact"                 <window>              (WindowContactToilet, gWindowsOpen)                   ["OpenState"]                      {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Window Contact", location="Toilet"]}

Group                         WindowContactLivingroom                       "Window"                         <window>              (gLivingroom)                                         ["Window"]                         {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Window Contact", location="Livingroom"]}
Switch                        WindowContactLivingroom_lowBattery            "Low Battery"                    <lowbattery>          (WindowContactLivingroom, gBatteryLow)                ["Energy", "LowBattery"]           {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Window Contact", location="Livingroom"]}
Contact                       WindowContactLivingroom_state                 "Window Contact"                 <window>              (WindowContactLivingroom, gWindowsOpen)               ["OpenState"]                      {uiSemantics="uiSemantics"[preposition=" in the ", equipment="Window Contact", location="Livingroom"]}

Group                         securitySystem                                "Sicherheitssystem"              <siren>                                                                     ["AlarmSystem"]
String                        securitySystem_mode                           "Alarmmodus"                                           (securitySystem)                                      ["Point"]
String                        securitySystem_PIN                            "PIN"                                                  (securitySystem)                                      ["Point"]
